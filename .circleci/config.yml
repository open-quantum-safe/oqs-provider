version: 2.1

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH}
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}
jobs:
  ubuntu_focal:
    description: A template for running OQS-OpenSSL tests on x64 Ubuntu Docker VMs
    docker:
      - image: openquantumsafe/ci-ubuntu-focal-x86_64:latest
    steps:
      - setup_remote_docker
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Clone and build liboqs (only STD algs)
          command: |
             git clone --depth 1 --branch main https://github.com/open-quantum-safe/liboqs.git &&
             cd liboqs && mkdir _build && cd _build &&
             cmake -GNinja -DOQS_ALGS_ENABLED=STD -DCMAKE_INSTALL_PREFIX=$(pwd)/../../.local .. && ninja install &&
             cd ..
      - run:
          name: Clone and build OpenSSL(3) 
          command: |
             git clone --branch master git://git.openssl.org/openssl.git openssl &&
             cd openssl && ./config --prefix=$(echo $(pwd)/../.local) && make -j 18 && make install_sw && cd ..
      - run:
          name: Build OQS-OpenSSL provider (only STD algs)
          command: |
             mkdir _build && cd _build && cmake -GNinja -DOPENSSL_ROOT_DIR=$(pwd)/../.local -DCMAKE_PREFIX_PATH=$(pwd)/../.local .. && ninja
      - run:
          name: Run tests
          command: |
             ./scripts/runtests.sh -V
      - run:
          name: Run tests (with encodings)
          command: |
            ./scripts/runtests_encodings.sh -V
      - run:
          name: Build OQS-OpenSSL provider (only STD algs) with NOPUBKEY_IN_PRIVKEY
          command: |
             rm -rf _build && mkdir _build && cd _build && cmake -GNinja -DNOPUBKEY_IN_PRIVKEY=ON -DOPENSSL_ROOT_DIR=$(pwd)/../.local -DCMAKE_PREFIX_PATH=$(pwd)/../.local .. && ninja
      - run:
          name: Run tests (-DNOPUBKEY_IN_PRIVKEY=ON)
          command: |
             ./scripts/runtests.sh -V
      - run:
          name: Run tests (-DNOPUBKEY_IN_PRIVKEY=ON, with encodings)
          command: |
            ./scripts/runtests_encodings.sh -V

  macOS:
    description: A template for running tests on macOS
    parameters:
      CMAKE_ARGS:
        description: "Arguments to pass to CMake."
        type: string
    macos:
      xcode: "13.2.1"
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Install dependencies
          command: env HOMEBREW_NO_AUTO_UPDATE=1 brew install cmake ninja
      - run:
          name: Get system information
          command: sysctl -a | grep machdep.cpu && cc --version
      - run:
          name: Clone and build liboqs
          command: |
             git clone --depth 1 --branch main https://github.com/open-quantum-safe/liboqs.git &&
             cd liboqs && mkdir _build && cd _build &&
             cmake -GNinja -DCMAKE_INSTALL_PREFIX=$(pwd)/../../.local << parameters.CMAKE_ARGS >> .. && ninja install &&
             cd ..
      - run:
          name: Clone and build OpenSSL(3) master
          command: |
             git clone --branch master git://git.openssl.org/openssl.git openssl &&
             cd openssl && ./config --prefix=$(echo $(pwd)/../.local) && make -j 18 && make install_sw && cd ..
      - run:
          name: Build OQS-OpenSSL provider 
          command: |
             mkdir _build && cd _build && cmake -GNinja -DOPENSSL_ROOT_DIR=$(pwd)/../.local -DCMAKE_PREFIX_PATH=$(pwd)/../.local << parameters.CMAKE_ARGS >> .. && ninja
      - run:
          name: Run tests
          command: |
             ./scripts/runtests.sh -V
      - run:
          name: Run tests (with encodings)
          command: |
            ./scripts/runtests_encodings.sh -V
      - run:
          name: Build OQS-OpenSSL provider with NOPUBKEY_IN_PRIVKEY
          command: |
             rm -rf _build && mkdir _build && cd _build && cmake -GNinja -DNOPUBKEY_IN_PRIVKEY=ON -DOPENSSL_ROOT_DIR=$(pwd)/../.local -DCMAKE_PREFIX_PATH=$(pwd)/../.local .. && ninja
      - run:
          name: Run tests (-DNOPUBKEY_IN_PRIVKEY=ON)
          command: |
             ./scripts/runtests.sh -V
      - run:
          name: Run tests (-DNOPUBKEY_IN_PRIVKEY=ON, with encodings)
          command: |
            ./scripts/runtests_encodings.sh -V

workflows:
  version: 2.1
  build:
    jobs:
      - ubuntu_focal:
          name: ubuntu-focal
          context: openquantumsafe
      - macOS:
          name: macOS-noopenssl
          CMAKE_ARGS: -DOQS_STRICT_WARNINGS=ON -DOQS_USE_OPENSSL=OFF
      - macOS:
          name: macOS-shared
          CMAKE_ARGS: -DBUILD_SHARED_LIBS=ON -DOQS_DIST_BUILD=OFF -DOQS_ENABLE_KEM_CLASSIC_MCELIECE=OFF

