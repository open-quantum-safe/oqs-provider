--- ../openssl/test/helpers/ssltestlib.c	2021-02-08 08:19:42.774106452 +0100
+++ ssltestlib.c	2021-02-08 08:44:55.882989246 +0100
@@ -9,14 +9,7 @@
 
 #include <string.h>
 
-#include "internal/nelem.h"
-#include "internal/cryptlib.h" /* for ossl_sleep() */
-#include "ssltestlib.h"
-#include "../testutil.h"
-#include "e_os.h"
-
-#ifdef OPENSSL_SYS_UNIX
-# include <unistd.h>
+#include <unistd.h>
 # ifndef OPENSSL_NO_KTLS
 #  include <netinet/in.h>
 #  include <netinet/in.h>
@@ -25,7 +18,11 @@
 #  include <unistd.h>
 #  include <fcntl.h>
 # endif
-#endif
+
+#include <openssl/bio.h>
+#include <openssl/err.h>
+#include <openssl/ssl.h>
+#include "ssltestlib.h"
 
 static int tls_dump_new(BIO *bi);
 static int tls_dump_free(BIO *a);
@@ -286,15 +283,15 @@
 const BIO_METHOD *bio_s_mempacket_test(void)
 {
     if (meth_mem == NULL) {
-        if (!TEST_ptr(meth_mem = BIO_meth_new(BIO_TYPE_MEMPACKET_TEST,
-                                              "Mem Packet Test"))
-            || !TEST_true(BIO_meth_set_write(meth_mem, mempacket_test_write))
-            || !TEST_true(BIO_meth_set_read(meth_mem, mempacket_test_read))
-            || !TEST_true(BIO_meth_set_puts(meth_mem, mempacket_test_puts))
-            || !TEST_true(BIO_meth_set_gets(meth_mem, mempacket_test_gets))
-            || !TEST_true(BIO_meth_set_ctrl(meth_mem, mempacket_test_ctrl))
-            || !TEST_true(BIO_meth_set_create(meth_mem, mempacket_test_new))
-            || !TEST_true(BIO_meth_set_destroy(meth_mem, mempacket_test_free)))
+        if ((meth_mem = BIO_meth_new(BIO_TYPE_MEMPACKET_TEST,
+                                     "Mem Packet Test")) == NULL
+            || !BIO_meth_set_write(meth_mem, mempacket_test_write)
+            || !BIO_meth_set_read(meth_mem, mempacket_test_read)
+            || !BIO_meth_set_puts(meth_mem, mempacket_test_puts)
+            || !BIO_meth_set_gets(meth_mem, mempacket_test_gets)
+            || !BIO_meth_set_ctrl(meth_mem, mempacket_test_ctrl)
+            || !BIO_meth_set_create(meth_mem, mempacket_test_new)
+            || !BIO_meth_set_destroy(meth_mem, mempacket_test_free))
             return NULL;
     }
     return meth_mem;
@@ -309,9 +306,9 @@
 {
     MEMPACKET_TEST_CTX *ctx;
 
-    if (!TEST_ptr(ctx = OPENSSL_zalloc(sizeof(*ctx))))
+    if ((ctx = OPENSSL_zalloc(sizeof(*ctx))) == NULL)
         return 0;
-    if (!TEST_ptr(ctx->pkts = sk_MEMPACKET_new_null())) {
+    if ((ctx->pkts = sk_MEMPACKET_new_null()) == NULL) {
         OPENSSL_free(ctx);
         return 0;
     }
@@ -446,11 +443,11 @@
     }
 
     for (i = 0; i < (duprec ? 3 : 1); i++) {
-        if (!TEST_ptr(allpkts[i] = OPENSSL_malloc(sizeof(*thispkt))))
+        if ((allpkts[i] = OPENSSL_malloc(sizeof(*thispkt))) == NULL)
             goto err;
         thispkt = allpkts[i];
 
-        if (!TEST_ptr(thispkt->data = OPENSSL_malloc(inl)))
+        if ((thispkt->data = OPENSSL_malloc(inl)) == NULL)
             goto err;
         /*
          * If we are duplicating the packet, we duplicate it three times. The
@@ -601,22 +598,15 @@
 const BIO_METHOD *bio_s_always_retry(void)
 {
     if (meth_always_retry == NULL) {
-        if (!TEST_ptr(meth_always_retry = BIO_meth_new(BIO_TYPE_ALWAYS_RETRY,
-                                                       "Always Retry"))
-            || !TEST_true(BIO_meth_set_write(meth_always_retry,
-                                             always_retry_write))
-            || !TEST_true(BIO_meth_set_read(meth_always_retry,
-                                            always_retry_read))
-            || !TEST_true(BIO_meth_set_puts(meth_always_retry,
-                                            always_retry_puts))
-            || !TEST_true(BIO_meth_set_gets(meth_always_retry,
-                                            always_retry_gets))
-            || !TEST_true(BIO_meth_set_ctrl(meth_always_retry,
-                                            always_retry_ctrl))
-            || !TEST_true(BIO_meth_set_create(meth_always_retry,
-                                              always_retry_new))
-            || !TEST_true(BIO_meth_set_destroy(meth_always_retry,
-                                               always_retry_free)))
+        if ((meth_always_retry = BIO_meth_new(BIO_TYPE_ALWAYS_RETRY,
+                                              "Always Retry")) == NULL
+            || !BIO_meth_set_write(meth_always_retry, always_retry_write)
+            || !BIO_meth_set_read(meth_always_retry, always_retry_read)
+            || !BIO_meth_set_puts(meth_always_retry, always_retry_puts)
+            || !BIO_meth_set_gets(meth_always_retry, always_retry_gets)
+            || !BIO_meth_set_ctrl(meth_always_retry, always_retry_ctrl)
+            || !BIO_meth_set_create(meth_always_retry, always_retry_new)
+            || !BIO_meth_set_destroy(meth_always_retry, always_retry_free))
             return NULL;
     }
     return meth_always_retry;
@@ -695,14 +685,14 @@
     if (sctx != NULL) {
         if (*sctx != NULL)
             serverctx = *sctx;
-        else if (!TEST_ptr(serverctx = SSL_CTX_new_ex(libctx, NULL, sm)))
+        else if (!(serverctx = SSL_CTX_new_ex(libctx, NULL, sm)))
             goto err;
     }
 
     if (cctx != NULL) {
         if (*cctx != NULL)
             clientctx = *cctx;
-        else if (!TEST_ptr(clientctx = SSL_CTX_new_ex(libctx, NULL, cm)))
+        else if (!(clientctx = SSL_CTX_new_ex(libctx, NULL, cm)))
             goto err;
     }
 
@@ -720,28 +710,28 @@
 
     if (serverctx != NULL
             && ((min_proto_version > 0
-                 && !TEST_true(SSL_CTX_set_min_proto_version(serverctx,
+                 && !(SSL_CTX_set_min_proto_version(serverctx,
                                                             min_proto_version)))
                 || (max_proto_version > 0
-                    && !TEST_true(SSL_CTX_set_max_proto_version(serverctx,
+                    && !(SSL_CTX_set_max_proto_version(serverctx,
                                                                 max_proto_version)))))
         goto err;
     if (clientctx != NULL
         && ((min_proto_version > 0
-             && !TEST_true(SSL_CTX_set_min_proto_version(clientctx,
+             && !(SSL_CTX_set_min_proto_version(clientctx,
                                                          min_proto_version)))
             || (max_proto_version > 0
-                && !TEST_true(SSL_CTX_set_max_proto_version(clientctx,
+                && !(SSL_CTX_set_max_proto_version(clientctx,
                                                             max_proto_version)))))
         goto err;
 
     if (serverctx != NULL && certfile != NULL && privkeyfile != NULL) {
-        if (!TEST_int_eq(SSL_CTX_use_certificate_file(serverctx, certfile,
-                                                      SSL_FILETYPE_PEM), 1)
-                || !TEST_int_eq(SSL_CTX_use_PrivateKey_file(serverctx,
+        if ((SSL_CTX_use_certificate_file(serverctx, certfile,
+                                                      SSL_FILETYPE_PEM) != 1)
+                || (SSL_CTX_use_PrivateKey_file(serverctx,
                                                             privkeyfile,
-                                                            SSL_FILETYPE_PEM), 1)
-                || !TEST_int_eq(SSL_CTX_check_private_key(serverctx), 1))
+                                                            SSL_FILETYPE_PEM)!=1)
+                || (SSL_CTX_check_private_key(serverctx)!=1))
             goto err;
     }
 
@@ -843,15 +833,15 @@
 
     if (*sssl != NULL)
         serverssl = *sssl;
-    else if (!TEST_ptr(serverssl = SSL_new(serverctx)))
+    else if ((serverssl = SSL_new(serverctx)) == NULL)
         goto error;
     if (*cssl != NULL)
         clientssl = *cssl;
-    else if (!TEST_ptr(clientssl = SSL_new(clientctx)))
+    else if ((clientssl = SSL_new(clientctx)) == NULL)
         goto error;
 
-    if (!TEST_ptr(s_to_c_bio = BIO_new_socket(sfd, BIO_NOCLOSE))
-            || !TEST_ptr(c_to_s_bio = BIO_new_socket(cfd, BIO_NOCLOSE)))
+    if ((s_to_c_bio = BIO_new_socket(sfd, BIO_NOCLOSE)) == NULL
+        || (c_to_s_bio = BIO_new_socket(cfd, BIO_NOCLOSE)) == NULL)
         goto error;
 
     SSL_set_bio(clientssl, c_to_s_bio, c_to_s_bio);
@@ -880,28 +870,28 @@
 
     if (*sssl != NULL)
         serverssl = *sssl;
-    else if (!TEST_ptr(serverssl = SSL_new(serverctx)))
+    else if ((serverssl = SSL_new(serverctx)) == NULL)
         goto error;
     if (*cssl != NULL)
         clientssl = *cssl;
-    else if (!TEST_ptr(clientssl = SSL_new(clientctx)))
+    else if ((clientssl = SSL_new(clientctx)) == NULL)
         goto error;
 
     if (SSL_is_dtls(clientssl)) {
-        if (!TEST_ptr(s_to_c_bio = BIO_new(bio_s_mempacket_test()))
-                || !TEST_ptr(c_to_s_bio = BIO_new(bio_s_mempacket_test())))
+        if ((s_to_c_bio = BIO_new(bio_s_mempacket_test())) == NULL
+            || (c_to_s_bio = BIO_new(bio_s_mempacket_test())) == NULL)
             goto error;
     } else {
-        if (!TEST_ptr(s_to_c_bio = BIO_new(BIO_s_mem()))
-                || !TEST_ptr(c_to_s_bio = BIO_new(BIO_s_mem())))
+        if ((s_to_c_bio = BIO_new(BIO_s_mem())) == NULL
+            || (c_to_s_bio = BIO_new(BIO_s_mem())) == NULL)
             goto error;
     }
 
     if (s_to_c_fbio != NULL
-            && !TEST_ptr(s_to_c_bio = BIO_push(s_to_c_fbio, s_to_c_bio)))
+            && (s_to_c_bio = BIO_push(s_to_c_fbio, s_to_c_bio)) == NULL)
         goto error;
     if (c_to_s_fbio != NULL
-            && !TEST_ptr(c_to_s_bio = BIO_push(c_to_s_fbio, c_to_s_bio)))
+            && (c_to_s_bio = BIO_push(c_to_s_fbio, c_to_s_bio)) == NULL)
         goto error;
 
     /* Set Non-blocking IO behaviour */
@@ -954,9 +944,9 @@
         }
 
         if (!clienterr && retc <= 0 && err != SSL_ERROR_WANT_READ) {
-            TEST_info("SSL_connect() failed %d, %d", retc, err);
+            fprintf(stderr, "SSL_connect() failed %d, %d", retc, err);
             if (want != SSL_ERROR_SSL)
-                TEST_openssl_errors();
+                ERR_print_errors_fp(stderr);
             clienterr = 1;
         }
         if (want != SSL_ERROR_NONE && err == want)
@@ -972,9 +962,9 @@
         if (!servererr && rets <= 0
                 && err != SSL_ERROR_WANT_READ
                 && err != SSL_ERROR_WANT_X509_LOOKUP) {
-            TEST_info("SSL_accept() failed %d, %d", rets, err);
+            fprintf(stderr, "SSL_accept() failed %d, %d", retc, err);
             if (want != SSL_ERROR_SSL)
-                TEST_openssl_errors();
+                ERR_print_errors_fp(stderr);
             servererr = 1;
         }
         if (want != SSL_ERROR_NONE && err == want)
@@ -988,20 +978,20 @@
             if (rets > 0 && retc <= 0) {
                 if (SSL_read(serverssl, buf, sizeof(buf)) > 0) {
                     /* We don't expect this to succeed! */
-                    TEST_info("Unexpected SSL_read() success!");
+                    fprintf(stderr, "Unexpected SSL_read() success!");
                     return 0;
                 }
             }
             if (retc > 0 && rets <= 0) {
                 if (SSL_read(clientssl, buf, sizeof(buf)) > 0) {
                     /* We don't expect this to succeed! */
-                    TEST_info("Unexpected SSL_read() success!");
+                    fprintf(stderr, "Unexpected SSL_read() success!");
                     return 0;
                 }
             }
         }
         if (++abortctr == MAXLOOPS) {
-            TEST_info("No progress made");
+            fprintf(stderr, "No progress made");
             return 0;
         }
         if (isdtls && abortctr <= 50 && (abortctr % 10) == 0) {
@@ -1010,7 +1000,7 @@
              * give the DTLS timer a chance to do something. We only do this for
              * the first few times to prevent hangs.
              */
-            ossl_sleep(50);
+            sleep(50);
         }
     } while (retc <=0 || rets <= 0);
 
@@ -1037,10 +1027,9 @@
      */
     for (i = 0; i < 2; i++) {
         if (SSL_read_ex(clientssl, &buf, sizeof(buf), &readbytes) > 0) {
-            if (!TEST_ulong_eq(readbytes, 0))
+            if (readbytes != 0)
                 return 0;
-        } else if (!TEST_int_eq(SSL_get_error(clientssl, 0),
-                                SSL_ERROR_WANT_READ)) {
+        } else if (SSL_get_error(clientssl, 0) != SSL_ERROR_WANT_READ) {
             return 0;
         }
     }
