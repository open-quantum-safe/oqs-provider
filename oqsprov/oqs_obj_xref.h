// SPDX-License-Identifier: Apache-2.0 AND MIT

/*
 * WARNING: do not edit!
 * Generated by objxref.pl
 *
 */


typedef struct {
    int sign_id;
    int hash_id;
    int pkey_id;
} nid_triple;

DEFINE_STACK_OF(nid_triple)

static const nid_triple sigoid_srt[] = {
    {NID_dilithium2, NID_sha512, NID_dilithium2},
    {NID_p256_dilithium2, NID_sha512, NID_p256_dilithium2},
    {NID_rsa3072_dilithium2, NID_sha512, NID_rsa3072_dilithium2},
    {NID_dilithium3, NID_sha512, NID_dilithium3},
    {NID_p384_dilithium3, NID_sha512, NID_p384_dilithium3},
    {NID_dilithium5, NID_sha512, NID_dilithium5},
    {NID_p521_dilithium5, NID_sha512, NID_p521_dilithium5},
    {NID_dilithium2_aes, NID_sha512, NID_dilithium2_aes},
    {NID_p256_dilithium2_aes, NID_sha512, NID_p256_dilithium2_aes},
    {NID_rsa3072_dilithium2_aes, NID_sha512, NID_rsa3072_dilithium2_aes},
    {NID_dilithium3_aes, NID_sha512, NID_dilithium3_aes},
    {NID_p384_dilithium3_aes, NID_sha512, NID_p384_dilithium3_aes},
    {NID_dilithium5_aes, NID_sha512, NID_dilithium5_aes},
    {NID_p521_dilithium5_aes, NID_sha512, NID_p521_dilithium5_aes},
    {NID_falcon512, NID_sha512, NID_falcon512},
    {NID_p256_falcon512, NID_sha512, NID_p256_falcon512},
    {NID_rsa3072_falcon512, NID_sha512, NID_rsa3072_falcon512},
    {NID_falcon1024, NID_sha512, NID_falcon1024},
    {NID_p521_falcon1024, NID_sha512, NID_p521_falcon1024},
    {NID_picnicl1full, NID_sha512, NID_picnicl1full},
    {NID_p256_picnicl1full, NID_sha512, NID_p256_picnicl1full},
    {NID_rsa3072_picnicl1full, NID_sha512, NID_rsa3072_picnicl1full},
    {NID_picnic3l1, NID_sha512, NID_picnic3l1},
    {NID_p256_picnic3l1, NID_sha512, NID_p256_picnic3l1},
    {NID_rsa3072_picnic3l1, NID_sha512, NID_rsa3072_picnic3l1},
    {NID_rainbowIclassic, NID_sha512, NID_rainbowIclassic},
    {NID_p256_rainbowIclassic, NID_sha512, NID_p256_rainbowIclassic},
    {NID_rsa3072_rainbowIclassic, NID_sha512, NID_rsa3072_rainbowIclassic},
    {NID_rainbowVclassic, NID_sha512, NID_rainbowVclassic},
    {NID_p521_rainbowVclassic, NID_sha512, NID_p521_rainbowVclassic},
    {NID_sphincsharaka128frobust, NID_sha512, NID_sphincsharaka128frobust},
    {NID_p256_sphincsharaka128frobust, NID_sha512,
     NID_p256_sphincsharaka128frobust},
    {NID_rsa3072_sphincsharaka128frobust, NID_sha512,
     NID_rsa3072_sphincsharaka128frobust},
    {NID_sphincssha256128frobust, NID_sha512, NID_sphincssha256128frobust},
    {NID_p256_sphincssha256128frobust, NID_sha512,
     NID_p256_sphincssha256128frobust},
    {NID_rsa3072_sphincssha256128frobust, NID_sha512,
     NID_rsa3072_sphincssha256128frobust},
    {NID_sphincsshake256128frobust, NID_sha512,
     NID_sphincsshake256128frobust},
    {NID_p256_sphincsshake256128frobust, NID_sha512,
     NID_p256_sphincsshake256128frobust},
    {NID_rsa3072_sphincsshake256128frobust, NID_sha512,
     NID_rsa3072_sphincsshake256128frobust},
};

static const nid_triple *const sigoid_srt_xref[] = {
    &sigoid_srt[0],
    &sigoid_srt[1],
    &sigoid_srt[2],
    &sigoid_srt[3],
    &sigoid_srt[4],
    &sigoid_srt[5],
    &sigoid_srt[6],
    &sigoid_srt[7],
    &sigoid_srt[8],
    &sigoid_srt[9],
    &sigoid_srt[10],
    &sigoid_srt[11],
    &sigoid_srt[12],
    &sigoid_srt[13],
    &sigoid_srt[14],
    &sigoid_srt[15],
    &sigoid_srt[16],
    &sigoid_srt[17],
    &sigoid_srt[18],
    &sigoid_srt[19],
    &sigoid_srt[20],
    &sigoid_srt[21],
    &sigoid_srt[22],
    &sigoid_srt[23],
    &sigoid_srt[24],
    &sigoid_srt[25],
    &sigoid_srt[26],
    &sigoid_srt[27],
    &sigoid_srt[28],
    &sigoid_srt[29],
    &sigoid_srt[30],
    &sigoid_srt[31],
    &sigoid_srt[32],
    &sigoid_srt[33],
    &sigoid_srt[34],
    &sigoid_srt[35],
    &sigoid_srt[36],
    &sigoid_srt[37],
    &sigoid_srt[38],
};
